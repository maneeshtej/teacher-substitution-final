import{j as L}from"./index-DcfvNCTE.js";import{r as le,b as ae}from"./vendor-xatzf0Rc.js";import{a as ce}from"./App-BarifcCs.js";var M={exports:{}},de=M.exports,Z;function ue(){return Z||(Z=1,function(F,V){(function(I,S){F.exports=S(le())})(typeof self<"u"?self:de,function(I){return function(){var S={155:function(e){e.exports=I}},Y={};function T(e){var t=Y[e];if(t!==void 0)return t.exports;var r=Y[e]={exports:{}};return S[e](r,r.exports,T),r.exports}T.d=function(e,t){for(var r in t)T.o(t,r)&&!T.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},T.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},T.r=function(e){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var $={};T.r($),T.d($,{useReactToPrint:function(){return oe}});var ee=T(155);function c({level:e="error",messages:t,suppressErrors:r=!1}){r||(e==="error"?console.error(t):e==="warning"?console.warn(t):console.debug(t))}function z(e,t){if(t||!e){const r=document.getElementById("printWindow");r&&document.body.removeChild(r)}}function q(e){return e instanceof Error?e:new Error("Unknown Error")}function G(e,t){const{documentTitle:r,onAfterPrint:l,onPrintError:m,preserveAfterPrint:u,print:w,suppressErrors:d}=t;setTimeout(()=>{var p,v;if(e.contentWindow){let E=function(){l==null||l(),z(u)};if(e.contentWindow.focus(),w)w(e).then(E).catch(f=>{m?m("print",q(f)):c({messages:["An error was thrown by the specified `print` function"],suppressErrors:d})});else{if(e.contentWindow.print){const f=(v=(p=e.contentDocument)===null||p===void 0?void 0:p.title)!==null&&v!==void 0?v:"",x=e.ownerDocument.title;r&&(e.ownerDocument.title=r,e.contentDocument&&(e.contentDocument.title=r)),e.contentWindow.print(),r&&(e.ownerDocument.title=x,e.contentDocument&&(e.contentDocument.title=f))}else c({messages:["Printing for this browser is not currently possible: the browser does not have a `print` method available for iframes."],suppressErrors:d});[/Android/i,/webOS/i,/iPhone/i,/iPad/i,/iPod/i,/BlackBerry/i,/Windows Phone/i].some(f=>{var x,P;return((P=(x=navigator.userAgent)!==null&&x!==void 0?x:navigator.vendor)!==null&&P!==void 0?P:"opera"in window&&window.opera).match(f)})?setTimeout(E,500):E()}}else c({messages:["Printing failed because the `contentWindow` of the print iframe did not load. This is possibly an error with `react-to-print`. Please file an issue: https://github.com/MatthewHerbst/react-to-print/issues/"],suppressErrors:d})},500)}function U(e){const t=[],r=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null);let l=r.nextNode();for(;l;)t.push(l),l=r.nextNode();return t}function J(e,t,r){const l=U(e),m=U(t);if(l.length===m.length)for(let u=0;u<l.length;u++){const w=l[u],d=m[u],p=w.shadowRoot;if(p!==null){const v=d.attachShadow({mode:p.mode});v.innerHTML=p.innerHTML,J(p,v,r)}}else c({messages:["When cloning shadow root content, source and target elements have different size. `onBeforePrint` likely resolved too early.",e,t],suppressErrors:r})}const te=`
    @page {
        /* Remove browser default header (title) and footer (url) */
        margin: 0;
    }
    @media print {
        body {
            /* Tell browsers to print background colors */
            color-adjust: exact; /* Firefox. This is an older version of "print-color-adjust" */
            print-color-adjust: exact; /* Firefox/Safari */
            -webkit-print-color-adjust: exact; /* Chrome/Safari/Edge/Opera */
        }
    }
`;function ne(e,t,r,l){var m,u,w,d,p;const{contentNode:v,clonedContentNode:E,clonedImgNodes:f,clonedVideoNodes:x,numResourcesToLoad:P,originalCanvasNodes:W}=r,{bodyClass:O,fonts:C,ignoreGlobalStyles:j,pageStyle:D,nonce:y,suppressErrors:R,copyShadowRoots:H}=l;e.onload=null;const o=(m=e.contentDocument)!==null&&m!==void 0?m:(u=e.contentWindow)===null||u===void 0?void 0:u.document;if(o){const N=o.body.appendChild(E);H&&J(v,N,!!R),C&&(!((w=e.contentDocument)===null||w===void 0)&&w.fonts&&(!((d=e.contentWindow)===null||d===void 0)&&d.FontFace)?C.forEach(s=>{const n=new FontFace(s.family,s.source,{weight:s.weight,style:s.style});e.contentDocument.fonts.add(n),n.loaded.then(()=>{t(n)}).catch(h=>{t(n,["Failed loading the font:",n,"Load error:",q(h)])})}):(C.forEach(s=>{t(s)}),c({messages:['"react-to-print" is not able to load custom fonts because the browser does not support the FontFace API but will continue attempting to print the page'],suppressErrors:R})));const B=D??te,_=o.createElement("style");y&&(_.setAttribute("nonce",y),o.head.setAttribute("nonce",y)),_.appendChild(o.createTextNode(B)),o.head.appendChild(_),O&&o.body.classList.add(...O.split(" "));const re=o.querySelectorAll("canvas");for(let s=0;s<W.length;++s){const n=W[s],h=re[s];if(h===void 0){c({messages:["A canvas element could not be copied for printing, has it loaded? `onBeforePrint` likely resolved too early.",n],suppressErrors:R});continue}const i=h.getContext("2d");i&&i.drawImage(n,0,0)}for(let s=0;s<f.length;s++){const n=f[s],h=n.getAttribute("src");if(h){const i=new Image;i.onload=()=>{t(n)},i.onerror=(a,g,k,b,A)=>{t(n,["Error loading <img>",n,"Error",A])},i.src=h}else t(n,['Found an <img> tag with an empty "src" attribute. This prevents pre-loading it.',n])}for(let s=0;s<x.length;s++){const n=x[s];n.preload="auto";const h=n.getAttribute("poster");if(h){const i=new Image;i.onload=()=>{t(n)},i.onerror=(a,g,k,b,A)=>{t(n,["Error loading video poster",h,"for video",n,"Error:",A])},i.src=h}else n.readyState>=2?t(n):n.src?(n.onloadeddata=()=>{t(n)},n.onerror=(i,a,g,k,b)=>{t(n,["Error loading video",n,"Error",b])},n.onstalled=()=>{t(n,["Loading video stalled, skipping",n])}):t(n,["Error loading video, `src` is empty",n])}const Q="select",X=v.querySelectorAll(Q),se=o.querySelectorAll(Q);for(let s=0;s<X.length;s++)se[s].value=X[s].value;if(!j){const s=document.querySelectorAll("style, link[rel~='stylesheet'], link[as='style']");for(let n=0,h=s.length;n<h;++n){const i=s[n];if(i.tagName.toLowerCase()==="style"){const a=o.createElement(i.tagName),g=i.sheet;if(g){let k="";try{const b=g.cssRules.length;for(let A=0;A<b;++A)typeof g.cssRules[A].cssText=="string"&&(k+=`${g.cssRules[A].cssText}\r
`)}catch(b){c({messages:["A stylesheet could not be accessed. This is likely due to the stylesheet having cross-origin imports, and many browsers block script access to cross-origin stylesheets. See https://github.com/MatthewHerbst/react-to-print/issues/429 for details. You may be able to load the sheet by both marking the stylesheet with the cross `crossorigin` attribute, and setting the `Access-Control-Allow-Origin` header on the server serving the stylesheet. Alternatively, host the stylesheet on your domain to avoid this issue entirely.",i,`Original error: ${q(b).message}`],level:"warning"})}a.setAttribute("id",`react-to-print-${n}`),y&&a.setAttribute("nonce",y),a.appendChild(o.createTextNode(k)),o.head.appendChild(a)}}else if(i.getAttribute("href"))if(i.hasAttribute("disabled"))c({messages:["`react-to-print` encountered a <link> tag with a `disabled` attribute and will ignore it. Note that the `disabled` attribute is deprecated, and some browsers ignore it. You should stop using it. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-disabled. The <link> is:",i],level:"warning"}),t(i);else{const a=o.createElement(i.tagName);for(let g=0,k=i.attributes.length;g<k;++g){const b=i.attributes[g];b&&a.setAttribute(b.nodeName,(p=b.nodeValue)!==null&&p!==void 0?p:"")}a.onload=()=>{t(a)},a.onerror=(g,k,b,A,ie)=>{t(a,["Failed to load",a,"Error:",ie])},y&&a.setAttribute("nonce",y),o.head.appendChild(a)}else c({messages:["`react-to-print` encountered a <link> tag with an empty `href` attribute. In addition to being invalid HTML, this can cause problems in many browsers, and so the <link> was not loaded. The <link> is:",i],level:"warning"}),t(i)}}}P===0&&G(e,l)}function K(e,t,r,l){e.onload=()=>{ne(e,t,r,l)},document.body.appendChild(e)}function oe(e){const{contentRef:t,fonts:r,ignoreGlobalStyles:l,onBeforePrint:m,onPrintError:u,preserveAfterPrint:w,suppressErrors:d}=e;return(0,ee.useCallback)(v=>{z(w,!0);const E=function({contentRef:o,optionalContent:N,suppressErrors:B}){return N&&(o&&c({level:"warning",messages:['"react-to-print" received a `contentRef` option and a optional-content param passed to its callback. The `contentRef` option will be ignored.']}),typeof N=="function")?N():o?o.current:void c({messages:['"react-to-print" did not receive a `contentRef` option or a optional-content param pass to its callback.'],suppressErrors:B})}({contentRef:t,optionalContent:v,suppressErrors:d});if(!E)return void c({messages:["There is nothing to print"],suppressErrors:d});const f=E.cloneNode(!0),x=document.querySelectorAll("link[rel~='stylesheet'], link[as='style']"),P=f.querySelectorAll("img"),W=f.querySelectorAll("video"),O=r?r.length:0,C=(l?0:x.length)+P.length+W.length+O,j=[],D=[],y=function(){const o=document.createElement("iframe");return o.width=`${document.documentElement.clientWidth}px`,o.height=`${document.documentElement.clientHeight}px`,o.style.position="absolute",o.style.top=`-${document.documentElement.clientHeight+100}px`,o.style.left=`-${document.documentElement.clientWidth+100}px`,o.id="printWindow",o.srcdoc="<!DOCTYPE html>",o}(),R=(o,N)=>{j.includes(o)?c({level:"debug",messages:["Tried to mark a resource that has already been handled",o],suppressErrors:d}):(N?(c({messages:['"react-to-print" was unable to load a resource but will continue attempting to print the page',...N],suppressErrors:d}),D.push(o)):j.push(o),j.length+D.length===C&&G(y,e))},H={contentNode:E,clonedContentNode:f,clonedImgNodes:P,clonedVideoNodes:W,numResourcesToLoad:C,originalCanvasNodes:E.querySelectorAll("canvas")};m?m().then(()=>{K(y,R,H,e)}).catch(o=>{u==null||u("onBeforePrint",q(o))}):K(y,R,H,e)},[e])}return $}()})}(M)),M.exports}var pe=ue();const ge=()=>{const F=ae.useRef(),V=pe.useReactToPrint({content:()=>F.current,documentTitle:"Print_Document"}),S=ce().state||{title:"Default Print",content:"No data provided."};return L.jsxs("div",{className:"print-container",children:[L.jsxs("div",{ref:F,className:"print-content",children:[L.jsx("h1",{className:"text-xl font-bold",children:S.title}),L.jsx("p",{className:"text-md",children:S.content})]}),L.jsx("button",{onClick:V,className:"print-button",children:"Print"})]})};export{ge as default};
