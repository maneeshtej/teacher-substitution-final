import"./useTeachStore-oF6TMzqJ.js";import{l as u}from"./recentFunctionUtils-DfT13bYP.js";import{s}from"./App-BarifcCs.js";import"./vendor-xatzf0Rc.js";import"./index-DcfvNCTE.js";const I=async r=>{if(!r||r.length===0)return console.error("Error: sub_ids not provided"),{data:null,error:"Substitution IDs not provided"};try{const{data:e,error:t}=await s.from("Substitution").update({deleted:!0}).in("sub_id",r);if(t)throw t;return{data:e,error:null}}catch(e){return console.error("Error deleting substitutions:",e),{data:null,error:e}}},N=async r=>{var n,i,d,l;if(!r||Object.keys(r).length===0)return console.error("Error: No substitutions provided"),{data:null,error:"No data to update"};const e=Object.values(r).map(async o=>{if(!o.sub_id)return console.error("Skipping invalid entry:",o),{data:null,error:"Invalid substitution data"};const{sub_id:c,re_sub_id:p,teacher_id:_,sub_teacher_id:f,class_id:m,date_of_period:g,status:S,state:b,reason:h,group_id:v}=o;return s.from("Substitution").update({re_sub_id:p,teacher_id:_,sub_teacher_id:f,class_id:m,date_of_period:g,status:S,state:b,reason:h,group_id:v}).eq("sub_id",c)}),t=await Promise.all(e),a=t.filter(({error:o})=>o);return a.length>0?(console.error("Some updates failed:",a),await u("EDIT",(n=r[0])==null?void 0:n.teacher_id,JSON.stringify(Object.values(r)),(i=r[0])==null?void 0:i.group_id),{data:null,error:a}):(await u("EDIT",(d=r[0])==null?void 0:d.teacher_id,JSON.stringify(Object.values(r)),(l=r[0])==null?void 0:l.group_id),{data:t,error:null})};export{I as removeSubstitutions,N as updateSubstitutions};
