import{s as l}from"./App-BarifcCs.js";const j=async t=>{try{const{data:e,error:r}=await l.from("Teachers").select("*").eq("email",t);return r?(console.error("Error fetching teacher details:",r),{data:null,error:r}):{data:e,error:null}}catch(e){return console.error("Unexpected error fetching teacher details:",e),{data:null,error:e}}},A=async t=>{if(!t)return console.error("Error: No ID provided"),{data:null,error:"No ID provided"};try{const{data:e,error:r}=await l.rpc("get_classes_by_teacher",{p_teacher_id:t});return r?(console.error("Error: ",r),{data:null,error:r}):{data:e.reduce((n,d)=>(n[d.day_of_week]||(n[d.day_of_week]=[]),n[d.day_of_week].push(d),n),{}),error:null}}catch(e){return console.error("Error: ",e),{data:null,error:e}}},w=async t=>{if(!t)return console.error("error : teacherID not given"),{data:null,error:"no teacherID"};const{data:e,error:r}=await l.from("Teachers").select("*").neq("id",t);return r?(console.error("error : ",r),{data:null,error:r}):{data:e,error:null}},q=async({teacherID:t,type:e,sortBy:r="dateofPeriod",sort:o="Asc",status:n=null,state:d=null,subTeacherFilter:p=null})=>{console.log(e),t||console.error("error : no TeacherID provided");let a=l.from("Substitution").select("*, Classes:class_id(Subjects:subject_id(*)), Teachers:sub_teacher_id(name)").neq("deleted","true");e=="sent"||e==null||e==null?a=a.eq("teacher_id",t):e=="rec"&&(a=a.eq("sub_teacher_id",t)),r==="dateofPeriod"?a=a.order("date_of_period",{ascending:o==="Asc"}):r==="createdAt"?a=a.order("created_at",{ascending:o==="Asc"}):r==="status"?a=a.order("status",{ascending:o==="Asc"}):r==="state"?a=a.order("state",{ascending:o==="Asc"}):r==="reason"&&(a=a.order("reason",{ascending:o==="Asc"}));const{data:u,error:c}=await a;if(c)return console.error("error : ",c),{data:null,error:c};if(u){const i=u.map(s=>{var _,f,h,b,g;return{sub_id:s.sub_id,re_sub_id:s.re_sub_id,teacher_id:s.teacher_id,sub_teacher_id:s.sub_teacher_id,class_id:s.class_id,date_of_period:s.date_of_period,created_at:s.created_at,status:s.status,state:s.state,reason:s.reason,re_sub:s.re_sub,subject_id:((f=(_=s.Classes)==null?void 0:_.Subjects)==null?void 0:f.subject_id)||null,subject_name:((b=(h=s.Classes)==null?void 0:h.Subjects)==null?void 0:b.subject_name)||null,sub_teacher_name:((g=s.Teachers)==null?void 0:g.name)||null,deleted:s.deleted}});if(i)return{data:i,error:null}}};export{q as a,A as b,w as c,j as g};
